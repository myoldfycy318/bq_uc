<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
       default-lazy-init="true">
    <!-- 主库数据源 -->
    <bean id="dataSourceParent" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="stat,wall"/>
    </bean>
    <!-- 数据源 -->
    <bean id="dataSource01" parent="dataSourceParent">
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>
    <!-- 数据源 -->
    <bean id="dataSource02" parent="dataSourceParent">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${mysql.dataSource02.url}"/>
        <property name="username" value="${mysql.dataSource02.username}"/>
        <property name="password" value="${mysql.dataSource02.password}"/>
    </bean>
    <!-- 数据源 -->
    <!--<bean id="dataSource03" parent="dataSourceParent">-->
        <!--<property name="url" value="${mysql.dataSource03.url}"/>-->
        <!--<property name="username" value="${mysql.dataSource03.username}"/>-->
        <!--<property name="password" value="${mysql.dataSource03.password}"/>-->
    <!--</bean>-->
    <!-- 动态数据源选择器  -->
    <bean id="dynamicDataSourceSelector" class="com.qbao.store.util.DynamicDataSourceSelector">
        <property name="dataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSource01" key="dataSource01"/>
                <entry value-ref="dataSource02" key="dataSource02"/>
                <!--<entry value-ref="dataSource03" key="dataSource03"/>-->
            </map>
        </property>
        <!-- 默认数据源 -->
        <!--<property name="defaultTargetDataSource" ref="dataSource01"/>-->
    </bean>

    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.qbao.store.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>
</beans>