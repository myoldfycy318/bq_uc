package com.qbao.store.service.impl;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.parser.Feature;
import com.bqiong.usercenter.constants.ErrorCode;
import com.bqiong.usercenter.constants.UserCenterConstants;
import com.bqiong.usercenter.exception.BizException;
import com.bqiong.usercenter.util.RedisUtil;
import com.qbao.store.entity.user.UserCard;
import com.qbao.store.mapper.user.UserCardMapper;
import com.qbao.store.service.UserCardService;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;

/**
 * Created by hunsy on 2017/5/5.
 */
@Service
public class UserCardServiceImp implements UserCardService {

    private Logger logger = LoggerFactory.getLogger(UserCardServiceImp.class);
    /**
     * 用于存放已验证用户uid的redis的set的key
     */
    public static final String USER_IDCARD_CHECKED = UserCenterConstants.REDIS_USERCENTER_APPLICATION + "idcard:hash";


    @Autowired
    private UserCardMapper mapper;

    @Override
    public UserCard findById(String uid) {
        UserCard userCard = null;
        // 查看redis中是否存在uid
        //从缓存中获取
        String cache = RedisUtil.hget(UserCardServiceImp.USER_IDCARD_CHECKED, uid);
        logger.info("获取缓存");
        if (StringUtils.isNotBlank(cache)) {
            userCard = JSONObject.parseObject(cache, UserCard.class, Feature.AutoCloseSource);
        }
        if (userCard == null) {
            userCard = mapper.selectByPrimaryKey(uid);
            if (userCard != null) {
                RedisUtil.hset(UserCardServiceImp.USER_IDCARD_CHECKED, userCard.getUid(), JSONObject.toJSONString(cache));
            }
        }
        return userCard;
    }

    @Override
    public void insert(UserCard userCard) throws Exception {
        userCard.setCreatedAt(new Date());
        if (mapper.insert(userCard) == 0) {
            throw new BizException(ErrorCode.SYSTEM_EXCEPTION.getCode());
        }
        RedisUtil.hset(USER_IDCARD_CHECKED, userCard.getUid(), JSONObject.toJSONString(userCard));
    }
}
